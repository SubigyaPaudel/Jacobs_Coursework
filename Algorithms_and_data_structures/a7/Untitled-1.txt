computeprefix(w):
        pi[1] = 0
        q = 0
        for i = 2 to w.len()
                while q > 0 and w[q+1] = w[i]:
                        q = pi[q]
                if w[q+1] == w[i]:
                        q = q + 1
                pi[i] = q
        return pi

KMP search(t,p):
        pi = computeprefix(p)
        q = 0
        m = p.length()
        n = p.length()
        validshift = []
        for i = 1 to n
                while q > 0 and t[q + 1] = t[i]:
                        q = pi[q]
                if t[q+1] == t[i]:
                        q = q + 1
                if q == m:
                        validshift.append(i-m)
                        q = pi[q]
        return validshift

                         